name: Deploy to AWS ECS
on:
  workflow_call:
    inputs:
      working-directory:
        type: string
        required: true
      image_name:
        type: string
        required: false
      image_eif:
        type: string
        required: false
        default: ''
      eif_pcr0:
        type: string
        required: false
        default: ''
      namespace:
        type: string
        required: false
        default: ''
    secrets:
      AWS_ACCESS_KEY_ID_TERRAFORM:
        required: true
      AWS_SECRET_ACCESS_KEY_TERRAFORM:
        required: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Setup Terraform Cli
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "1.7.1"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_TERRAFORM }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_TERRAFORM }}
          aws-region: eu-west-3

      - name: Check namespace if set
        if: inputs.namespace != ''
        run: |
          echo "NAMESPACE=${{ inputs.namespace }}" >> "$GITHUB_ENV"

      - name: Current branch sha
        if: inputs.namespace == '' && github.event_name != 'release'
        run: |
          echo "NAMESPACE=dev" >> "$GITHUB_ENV"

      - name: Current Tag
        if: inputs.namespace == '' && github.event_name == 'release'
        run: |
          echo "NAMESPACE=prod" >> "$GITHUB_ENV"

      - name: Initialize terraform
        run: terraform -chdir=operations/terraform/environments/${{env.NAMESPACE}} init
        working-directory: ${{ inputs.working-directory }}

      - name: Execute Plan terraform
        run: terraform -chdir=operations/terraform/environments/${{env.NAMESPACE}} plan -var='image=${{ inputs.image_name }}' -var='image_eif=${{ inputs.image_eif }}' -var='eif_pcr0=${{ inputs.eif_pcr0 }}'
        working-directory: ${{ inputs.working-directory }}

      - name: Apply terraform
        run: terraform -chdir=operations/terraform/environments/${{env.NAMESPACE}} apply -var='image=${{ inputs.image_name }}' -var='image_eif=${{ inputs.image_eif }}' -var='eif_pcr0=${{ inputs.eif_pcr0 }}' -auto-approve
        working-directory: ${{ inputs.working-directory }}

      - name: Output terraform
        run: terraform -chdir=operations/terraform/environments/${{env.NAMESPACE}} output
        working-directory: ${{ inputs.working-directory }}

