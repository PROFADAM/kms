name: "[core/service Main] Pipeline Run"

on:
  schedule:
    - cron: '0 0 * * 1-5' # 00:00 UTC is 01:00 CET every weekday
  workflow_call:
  workflow_dispatch:
  push:
    branches: ['main']
    paths:
      - 'core/grpc/**'
      - 'core/service/**'
      - 'core/threshold/**'
      - 'conf-trace/**'
      - '.github/workflows/service-main.yml'

concurrency:
  group: service-${{ github.ref }}
  cancel-in-progress: false

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      run: |
        MATRIX="matrix={\"include\":["
        if [[ "${{ github.event_name }}" == "schedule" ]]; then
          MATRIX="${MATRIX}{\"args-tests\":\"-F slow_tests -F s3_tests -F insecure nightly_tests\"}"
        else
          MATRIX="${MATRIX}{\"args-tests\":\"-F slow_tests -F s3_tests -F insecure default_reencryption_threshold -- --skip nightly_tests --test-threads=1\"},{\"args-tests\":\"-F slow_tests -F s3_tests -F insecure default_verify_proven_ct_threshold -- --skip nightly_tests --test-threads=1\"},{\"args-tests\":\"-F slow_tests -F s3_tests -F insecure threshold -- --skip default_reencryption_threshold --skip default_verify_proven_ct_threshold --skip nightly_tests --test-threads=1\"},{\"args-tests\":\"-F slow_tests -F s3_tests -F insecure -- --skip threshold --skip nightly_tests --test-threads=1\"}"
        fi
        MATRIX="${MATRIX%,}]}"
        echo "$MATRIX" >> "$GITHUB_OUTPUT"
        echo "$MATRIX"

  build:
    needs: prepare-matrix
    strategy:
      matrix: ${{fromJson(needs.prepare-matrix.outputs.matrix)}}
    uses: ./.github/workflows/common-build-big-instance.yml
    with:
      working-directory: './core/service'
      args-tests: ${{ matrix.args-tests }}
      run-minio: true
      run-wasm: true
      package-name: 'kms'
    permissions:
      contents: 'write'
      id-token: 'write'
      pages: 'write'
    secrets:
      BLOCKCHAIN_ACTIONS_TOKEN: ${{ secrets.BLOCKCHAIN_ACTIONS_TOKEN }}
      SLAB_ACTION_TOKEN: ${{ secrets.SLAB_ACTION_TOKEN }}
      SLAB_BASE_URL: ${{ secrets.SLAB_BASE_URL }}
      JOB_SECRET: ${{ secrets.JOB_SECRET }}

  docker:
    needs:
      - build
    uses: ./.github/workflows/common-docker-big-instance.yml
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    with:
      working-directory: "./core/service"
      push_image: true
      image-name: 'kms-service'
      docker-file: 'ci.dockerfile'
    secrets:
      BLOCKCHAIN_ACTIONS_TOKEN: ${{ secrets.BLOCKCHAIN_ACTIONS_TOKEN }}
      GRAVITON_BUILDER_SSH_PRIVATE_KEY: ${{ secrets.GRAVITON_BUILDER_SSH_PRIVATE_KEY }}
      SLAB_ACTION_TOKEN: ${{ secrets.SLAB_ACTION_TOKEN }}
      SLAB_BASE_URL: ${{ secrets.SLAB_BASE_URL }}
      JOB_SECRET: ${{ secrets.JOB_SECRET }}

  enclave:
    needs:
      - build
      - docker
    uses: ./.github/workflows/common-nitro-enclave.yml
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    with:
      working-directory: "./core/service"
      push_image: true
      image-name: 'kms-service'
      image-enclave-name: 'kms-service-enclave'
      docker-file-enclave: 'enclave.dockerfile'
    secrets:
      BLOCKCHAIN_ACTIONS_TOKEN: ${{ secrets.BLOCKCHAIN_ACTIONS_TOKEN }}

  update-argocd-staging:
    if: github.event_name == 'schedule'
    needs:
      - build
      - docker
      - enclave
    uses: ./.github/workflows/common-update-argocd.yml
    with:
      branch-name: 'kms-staging'
      argocd-namespace: 'kms-threshold-staging'
      argocd-app-name: 'kms-service'
      image-tag: ${{ needs.docker.outputs.image_tag }}
    secrets:
      ZWS_BOT_TOKEN: ${{ secrets.ZWS_BOT_TOKEN }}
