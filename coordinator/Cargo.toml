[package]
name = "kms"
version = "0.1.0"
edition = "2021"

[lib] # Central KMS
name = "kms_lib"
path = "src/lib.rs"
crate-type = ["lib", "cdylib"]

[[bin]] # Bin to generate keys
name = "kms-gen-keys"
path = "src/bin/gen.rs"

[[bin]] # Bin to generate TLS certificates for coordinator and cores
name = "kms-gen-tls-certs"
path = "src/bin/gen-tls-certs.rs"

[[bin]] # Bin to run the gRPC server
name = "kms-server"
path = "src/bin/server.rs"

[[bin]] # Bin to run the gRPC client
name = "kms-client"
path = "src/bin/client_bin.rs"

[dependencies]
aes = "0.8.4"
aes-prng = "~0.2"
alloy-sol-types = "0.7.0"
alloy-primitives = "0.7.0"
anyhow = "~1.0"
aws-config = { version = "1.1.8", optional = true }
aws-nitro-enclaves-nsm-api = { version = "0.4.0", optional = true }
aws-sdk-kms = { version = "1.18.0", optional = true }
aws-sdk-s3 = { version = "1.18.0", optional = true }
backoff = { version = "0.4.0", features = ["tokio"], optional = true }
bincode = "~1.3"
clap = { version = "4.5.1", features = ["derive"] }
cbc = { version = "0.1.2", features = ["alloc"] }
cfg-if = "1.0.0"
cms = "0.2.3"
crypto_box = { version = "~0.9.1", features = ["salsa20"] }
der = "0.7.8"
distributed-decryption = { path = "../core/threshold/", default-features = false }
hex = "0.4.3"
itertools = "0.12"
k256 = "0.13.3"
lazy_static = "~1.4"
nom = "7.1.3"
prost = "0.12.3"
rand = { version = "~0.8", features = ["std", "std_rng"] }
# TODO needed for now to avoid tests timing out
rayon = "1.8.1"
rcgen = { version = "0.13", optional = true }
reqwest = { version = "0.11", features = ["json"], optional = true }
rsa = { version = "0.9.6", features = ["sha2"] }
rustls = { version = "0.23.4", default-features = false, features = [
    "std",
], optional = true }
serde = { version = "~1.0", features = ["derive", "rc"] }
serde_json = "1.0"
serde_asn1_der = "0.8.0"
serde_bytes = "0.11"
serial_test = "3.0.0"
sha3 = "~0.10.8"
signature = "~2.2"
strum = "0.26"
strum_macros = "0.26"
tonic = { version = "0.11", optional = true }
tokio = { version = "1.36", features = ["macros", "rt-multi-thread"], optional = true }
tfhe = { git = "https://github.com/zama-ai/tfhe-rs.git", rev = "083c06814464cf8f517af2c2aade1d8133ffe29b", features = ["boolean", "shortint", "integer", "zk-pok-experimental"] }
tracing = { version = "~0.1", features = ["log"] }
tracing-test = "0.2.4"
tracing-subscriber = "0.3.18"
url = "2.5.0"
webpki = { version = "0.22", features = ["std"], optional = true }
tfhe-zk-pok = { git = "https://github.com/zama-ai/tfhe-rs.git", rev = "083c06814464cf8f517af2c2aade1d8133ffe29b",  optional = true }

# [target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = { version = "0.2.86", features = ["serde-serialize"] }
console_error_panic_hook = { version = "0.1.7" }
serde-wasm-bindgen = { version = "0.6.0" }

[target.'cfg(unix)'.dependencies]
tfhe = { git = "https://github.com/zama-ai/tfhe-rs.git", rev = "083c06814464cf8f517af2c2aade1d8133ffe29b", features = ["seeder_unix"] }

[dev-dependencies]
ctor = "~0.2"

[build-dependencies]
tonic-build = "0.10"

[features]
default = ["non-wasm","grpc-client"]
non-wasm = [
    "distributed-decryption/non-wasm",
    "distributed-decryption/testing",
    "dep:aws-config",
    "dep:aws-nitro-enclaves-nsm-api",
    "dep:aws-sdk-kms",
    "dep:aws-sdk-s3",
    "dep:backoff",
    "dep:tokio",
    "dep:reqwest",
    "dep:rcgen",
    "dep:rustls",
    "dep:tonic",
    "dep:webpki",
    "dep:tfhe-zk-pok",
]
slow_tests = []
wasm_tests = []
grpc-client = [
    "dep:tonic",
    "dep:tokio",
]
