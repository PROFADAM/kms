[package]
name = "distributed-decryption"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
aes = "0.8.2"
aes-prng = "0.2.1"
aligned-vec = "~0.5"
anyhow = "~1.0"
async-channel = "~2.3"
async-trait = "~0.1"
async_cell = "~0.2"
backoff = { version = "~0.4", features = ["tokio"], optional = true }
bincode = "~1.3"
cfg-if = "1.0.0"
clap = { version = "~4", features = ["derive", "env"] }
concrete-csprng = { git = "https://github.com/zama-ai/tfhe-rs.git", rev = "f3b89e83d741cf89a8277a98eb0f2665987ee456" } # == tfhe-rs v0.6.3
config = "0.14.0"
const_format = "0.2.32"
crypto-bigint = { version = "~0.6.0-pre.12", features = [
    "serde",
    "rand_core",
    "extra-sizes",
], optional = true }
crypto_box = { version = "~0.9.1", features = ["salsa20"] }
dashmap = "~5"
derive_more = "~0.99"
enum_dispatch = "0.3.12"
futures = "~0.3"
g2p = "1.0.1"
itertools = "0.12"
k256 = "0.13.1"
lazy_static = "~1.4"
minijinja = { version = "1.0.11", features = ["loader"], optional = true }
mockall = "~0.12.1"
ndarray = { version = "~0.15", features = ["serde"] }
ndarray-stats = "~0.5"
noisy_float = "0.2.0"
nom = "7.1.3"
num-integer = "0.1.45"
num-traits = "0.2"
opentelemetry = { version = "0.22", optional = true }
opentelemetry-otlp = { version = "0.15.0", features = [
    "tokio",
], optional = true }
opentelemetry-semantic-conventions = { version = "0.14.0", optional = true }
opentelemetry-stdout = { version = "0.3.0", features = [
    "trace",
], optional = true }
opentelemetry_sdk = { version = "0.22", features = [
    "rt-tokio",
    "logs",
], optional = true }
opentelemetry-http = { version = "0.11", optional = true }
prettytable-rs = { version = "~0.10", optional = true }
paste = "1.0.12"
prost = "0.12"
rand = "~0.8"
rayon = "1.10"
redis = { version = "0.25.3", optional = true }
serde = { version = "~1.0", features = ["derive", "rc"] }
serde_json = "1.0"
sha3 = "~0.10.8"
signature = "~2.2"
strum = { version = "0.26", features = ["derive"] }
strum_macros = "0.26"
tokio = { version = "1.37", features = ["full", "sync"], optional = true }
toml = "~0.8"
tonic = { version = "0.11", features = ["tls"], optional = true }
tonic-health = { version = "0.11", optional = true }
tower = { version = "0.4", features = ["retry", "timeout"], optional = true }
tower-http = { version = "0.4", features = ["trace"], optional = true }
tfhe = { git = "https://github.com/zama-ai/tfhe-rs.git", rev = "f3b89e83d741cf89a8277a98eb0f2665987ee456", features = [
    "boolean",
    "shortint",
    "integer",
    "zk-pok-experimental",
] } # == tfhe-rs v0.6.3
tracing = { version = "0.1.40", features = ["log"] }
tracing-opentelemetry = "0.23"
tracing-subscriber = { version = "0.3.18", features = ["env-filter", "fmt"] }
typed-builder = "0.18.1"
x509-parser = "~0.16"
zeroize = { version = "~1.8", features = ["zeroize_derive"] }
tfhe-zk-pok = { git = "https://github.com/zama-ai/tfhe-rs.git", rev = "f3b89e83d741cf89a8277a98eb0f2665987ee456", optional = true } # == tfhe-rs v0.6.3

# we need getrandom to have the js feature so that it can target wasm
# this is an indirect dependency
getrandom = { version = "0.2", features = ["js"] }

[build-dependencies]
tonic-build = "~0.10"

[target.'cfg(unix)'.dependencies]
tfhe = { git = "https://github.com/zama-ai/tfhe-rs.git", rev = "f3b89e83d741cf89a8277a98eb0f2665987ee456", features = [
    "seeder_unix",
] } # == tfhe-rs v0.6.3

[dev-dependencies]
criterion = "~0.5"
ctor = "~0.2"
proptest = "~1.4"
pprof = { version = "0.13", features = ["flamegraph", "criterion"] }
rstest = "~0.19"
serial_test = "3.0.0"
test-log = { version = "0.2", features = ["trace"] }
tracing-test = "0.2"

[lib]
crate-type = ["lib", "cdylib"]

[[bin]]
name = "moby"
path = "src/bin/moby/moby.rs"

[[bin]]
name = "mobygo"
path = "src/bin/moby/mobygo.rs"
required-features = ["choreographer"]

[[bin]]
name = "gen-experiment"
path = "src/bin/benches/gen-experiment.rs"
required-features = ["templating"]

[[bin]]
name = "stairwayctl"
path = "src/experimental/bin/stairwayctl.rs"
required-features = ["experimental", "choreographer", "testing"]

[[bench]]
name = "ddec"
harness = false
required-features = ["testing"]

[[bench]]
name = "decoding"
harness = false
required-features = ["experimental"]

[[bench]]
name = "algebra"
harness = false
required-features = ["experimental"]

[[bench]]
name = "bgv"
harness = false
required-features = ["experimental", "testing"]

[[bench]]
name = "bench_switch_and_squash"
harness = false
required-features = ["testing"]

[[bench]]
name = "bench_prss"
harness = false

[[bench]]
name = "prep"
harness = false
required-features = ["testing"]

[[bench]]
name = "bit_dec"
harness = false
required-features = ["testing"]

[[bench]]
name = "ceremony"
harness = false
required-features = ["testing"]

[profile.bench]
debug = true

[profile.test]
opt-level = 3

[features]
default = ["non-wasm"]
testing = []
slow_tests = []
sequential_sns = []
experimental = ["dep:crypto-bigint"]
templating = ["minijinja"]
choreographer = ["prettytable-rs"]
# put all the dependencies that does not work well with wasm
# namely libraries that doesn't work on 32-bit architectures
# or uses tokio
non-wasm = [
    "dep:tokio",
    "dep:tonic",
    "dep:tonic-health",
    "dep:backoff",
    "dep:tower",
    "dep:tower-http",
    "dep:opentelemetry",
    "dep:opentelemetry-otlp",
    "dep:opentelemetry-semantic-conventions",
    "dep:opentelemetry-stdout",
    "dep:opentelemetry_sdk",
    "dep:opentelemetry-http",
    "dep:redis",
    "dep:tfhe-zk-pok",
]
