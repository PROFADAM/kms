[package]
name = "distributed-decryption"
version = "0.9.0-rc11"
edition.workspace = true
publish.workspace = true
authors.workspace = true
license.workspace = true


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
aes = "0.8.2"
aes-prng = "0.2.1"
aligned-vec = "0.5"
anyhow.workspace = true
async-trait.workspace = true
backoff = { version = "0.4", features = ["tokio"], optional = true }
bincode.workspace = true
cfg-if = "1.0.0"
clap = { workspace = true, features = ["derive", "env"] }
kms-common = { path = "../../common", version = "0.9.0-rc11" }
concrete-csprng = "0.4.1"
conf-trace = { path = "../../conf-trace", optional = true, version = "0.9.0-rc11" }
const_format = "0.2.32"
crypto-bigint = { version = "0.6.0-rc.6", features = [
    "serde",
    "rand_core",
    "extra-sizes",
], optional = true }
crypto_box = { version = "0.9.1", features = ["salsa20"] }
dashmap = "6"
derive_more = "0.99"
enum_dispatch = "0.3.12"
futures = "0.3"
g2p = "1.0.1"
itertools = "0.13"
k256 = "0.13.1"
lazy_static = "1.5"
minijinja = { version = "2.0.3", features = ["loader"], optional = true }
mockall = "0.12.1"
ndarray = { version = "0.16", features = ["serde"] }
nom = "7.1.3"
num-integer = "0.1.45"
num-traits = "0.2"
opentelemetry = { version = "0.23", optional = true }
paste = "1.0.12"
prost.workspace = true
rand.workspace = true
rayon = "1.10"
redis = { version = "0.27.2", optional = true }
serde = { workspace = true, features = ["derive", "rc"] }
serde_json.workspace = true
sha3 = "0.10.8"
signature = "2.2"
strum = { version = "0.26", features = ["derive"] }
strum_macros = "0.26"
tokio = { workspace = true, features = ["full", "sync"], optional = true }
tonic = { workspace = true, features = ["tls"], optional = true }
tonic-health = { version = "0.11", optional = true }
tower = { version = "0.4", features = ["retry", "timeout"], optional = true }
tower-http = { version = "0.4", features = ["trace"], optional = true }
# experimental-force_fft_algo_dif4 feature ensure PBS is deterministic
tfhe = { workspace = true, features = [
    "boolean",
    "shortint",
    "integer",
    "zk-pok",
    "experimental-force_fft_algo_dif4",
] }
tracing = { workspace = true, features = ["log"] }
x509-parser = "0.16"
zeroize = { version = "1.8", features = ["zeroize_derive"] }
tfhe-zk-pok = { workspace = true, optional = true }
tfhe-versionable = { workspace = true }

# we need getrandom to have the js feature so that it can target wasm
# this is an indirect dependency
getrandom = { version = "0.2", features = ["js"] }

[build-dependencies]
tonic-build.workspace = true

[target.'cfg(unix)'.dependencies]
tfhe = { workspace = true, features = [
    "seeder_unix",
] }

[dev-dependencies]
criterion = "0.5"
ctor = "0.2"
proptest = "1.5"
pprof = { version = "0.13", features = ["flamegraph", "criterion"] }
rstest = "0.21"
serial_test = "3.0.0"
tempfile = "3.13.0"
test-log = { version = "0.2", features = ["trace"] }
tracing-test = "0.2"
kms-common = { path = "../../common", version = "0.9.0-rc11", features = ["testing"] }
backward-compatibility = { path = "../../backward-compatibility", version = "0.9.0-rc3" , features = ["load", "tests"] }

[lib]
crate-type = ["lib", "cdylib"]

[[bin]]
name = "moby"
path = "src/bin/moby/moby.rs"
required-features = ["choreographer"]

[[bin]]
name = "mobygo"
path = "src/bin/moby/mobygo.rs"
required-features = ["choreographer"]

[[bin]]
name = "gen-experiment"
path = "src/bin/benches/gen-experiment.rs"
required-features = ["templating"]

[[bin]]
name = "stairwayctl"
path = "src/experimental/bin/stairwayctl.rs"
required-features = ["experimental", "choreographer", "testing"]

[[bench]]
name = "ddec"
harness = false
required-features = ["testing"]

[[bench]]
name = "decoding"
harness = false
required-features = ["experimental"]

[[bench]]
name = "algebra"
harness = false
required-features = ["experimental"]

[[bench]]
name = "bgv"
harness = false
required-features = ["experimental", "testing"]

[[bench]]
name = "bench_switch_and_squash"
harness = false
required-features = ["testing"]

[[bench]]
name = "bench_prss"
harness = false

[[bench]]
name = "prep"
harness = false
required-features = ["testing"]

[[bench]]
name = "bit_dec"
harness = false
required-features = ["testing"]

[[bench]]
name = "ceremony"
harness = false
required-features = ["testing"]

[profile.bench]
debug = true

[profile.test]
opt-level = 3

[features]
default = ["non-wasm"]
# Some utilities used in the `testing` feature require the `non-wasm` feature to be enabled
testing = ["dep:tokio", "non-wasm"]
slow_tests = ["testing"]
sequential_sns = []
experimental = ["dep:crypto-bigint", "choreographer"]
templating = ["minijinja"]
choreographer = []
# put all the dependencies that does not work well with wasm
# namely libraries that doesn't work on 32-bit architectures
# or uses tokio
non-wasm = [
    "dep:conf-trace",
    "dep:tokio",
    "dep:tonic",
    "dep:tonic-health",
    "dep:backoff",
    "dep:tower",
    "dep:tower-http",
    "dep:opentelemetry",
    "dep:redis",
    "dep:tfhe-zk-pok",
]
