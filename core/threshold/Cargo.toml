[package]
name = "distributed-decryption"
version.workspace = true
edition.workspace = true
publish.workspace = true
authors.workspace = true
license.workspace = true


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
aes.workspace = true
aes-prng.workspace = true
aligned-vec = "=0.5.0"
anyhow.workspace = true
async-trait.workspace = true
backoff = { workspace = true, features = ["tokio"], optional = true }
bincode.workspace = true
cfg-if.workspace = true
clap = { workspace = true, features = ["derive", "env"] }
kms-common.workspace = true
concrete-csprng = "=0.4.1"
conf-trace = { workspace = true, optional = true }
const_format = "=0.2.33"
crypto-bigint = { version = "=0.6.0-rc.6", features = [
    "serde",
    "rand_core",
    "extra-sizes",
], optional = true }
dashmap = "=6.1.0"
derive_more = { version = "=1.0.0", features = ["display"] }
futures.workspace = true
g2p = "=1.1.0"
itertools.workspace = true
lazy_static.workspace = true
minijinja = { version = "=2.4.0", features = ["loader"], optional = true }
mockall.workspace = true
ndarray = { version = "=0.16.1", features = ["serde"] }
num-integer = "=0.1.46"
num-traits = "=0.2.19"
opentelemetry = { workspace = true, optional = true }
paste = "=1.0.15"
prost.workspace = true
rand.workspace = true
rayon.workspace = true
redis = { version = "=0.27.5", optional = true }
serde = { workspace = true, features = ["derive", "rc"] }
serde_json.workspace = true
sha3.workspace = true
strum = {  workspace = true, features = ["derive"] }
strum_macros.workspace = true
tokio = { workspace = true, features = ["full", "sync"], optional = true }
tonic = { workspace = true, features = ["tls"], optional = true }
tonic-health = { workspace = true, optional = true }
tower = { workspace = true, features = ["retry", "timeout"], optional = true }
tower-http = { workspace = true, features = ["trace"], optional = true }
tfhe = { workspace = true, features = [
    "boolean",
    "shortint",
    "integer",
    "zk-pok",
] }
tracing = { workspace = true, features = ["log"] }
x509-parser = "=0.16.0"
zeroize = { version = "=1.8.1", features = ["zeroize_derive"] }
tfhe-zk-pok = { workspace = true, optional = true }
tfhe-versionable.workspace = true

# we need getrandom to have the js feature so that it can target wasm
# this is an indirect dependency
getrandom = { version = "=0.2.15", features = ["js"] }

[build-dependencies]
tonic-build.workspace = true

[target.'cfg(unix)'.dependencies]
tfhe = { workspace = true, features = ["seeder_unix"] }

[dev-dependencies]
criterion = "=0.5.1"
ctor = "=0.2.8"
proptest = "=1.5.0"
pprof = { version = "=0.13.0", features = ["flamegraph", "criterion"] }
rstest = "=0.23.0"
serial_test = "=3.1.1"
tempfile = "=3.13.0"
test-log = { version = "=0.2.16", features = ["trace"] }
tracing-test = "=0.2.5"
kms-common = { workspace = true, features = [
    "testing",
] }
backward-compatibility = { workspace = true, features = [
    "load",
    "tests",
] }

[lib]
crate-type = ["lib", "cdylib"]

[[bin]]
name = "moby"
path = "src/bin/moby/moby.rs"
required-features = ["choreographer"]

[[bin]]
name = "mobygo"
path = "src/bin/moby/mobygo.rs"
required-features = ["choreographer"]

[[bin]]
name = "gen-experiment"
path = "src/bin/benches/gen-experiment.rs"
required-features = ["templating"]

[[bin]]
name = "stairwayctl"
path = "src/experimental/bin/stairwayctl.rs"
required-features = ["experimental", "choreographer", "testing"]

[[bench]]
name = "ddec"
harness = false
required-features = ["testing"]

[[bench]]
name = "decoding"
harness = false
required-features = ["experimental"]

[[bench]]
name = "algebra"
harness = false
required-features = ["experimental"]

[[bench]]
name = "bgv"
harness = false
required-features = ["experimental", "testing"]

[[bench]]
name = "bench_switch_and_squash"
harness = false
required-features = ["testing"]

[[bench]]
name = "bench_prss"
harness = false

[[bench]]
name = "prep"
harness = false
required-features = ["testing"]

[[bench]]
name = "bit_dec"
harness = false
required-features = ["testing"]

[[bench]]
name = "ceremony"
harness = false
required-features = ["testing"]

[features]
default = ["non-wasm"]
# Some utilities used in the `testing` feature require the `non-wasm` feature to be enabled
testing = ["dep:tokio", "non-wasm"]
slow_tests = ["testing"]
sequential_sns = []
experimental = ["dep:crypto-bigint", "choreographer"]
templating = ["minijinja"]
choreographer = []
# put all the dependencies that does not work well with wasm
# namely libraries that doesn't work on 32-bit architectures
# or uses tokio
non-wasm = [
    "dep:conf-trace",
    "dep:tokio",
    "dep:tonic",
    "dep:tonic-health",
    "dep:backoff",
    "dep:tower",
    "dep:tower-http",
    "dep:opentelemetry",
    "dep:redis",
    "dep:tfhe-zk-pok",
]
