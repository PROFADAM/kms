name: Compile Rust Project and Run Tests

on:
  workflow_call:
    inputs:
      runs-on:
        type: string
        required: false
        default: 'ubuntu-latest'
      args_build:
        type: string
        required: false
        default: ''
      run-redis:
        type: boolean
        required: false
        default: false
    secrets:
      CONCRETE_ACTIONS_TOKEN:
        required: true

env:
  CARGO_TERM_COLOR: always

jobs:
  compile-rust-unit-tests:
    runs-on: ${{ inputs.runs-on }}
    services:
      redis:
        image: ${{ inputs.run-redis && 'redis/redis-stack:latest' ||Â '' }}
        ports:
          - 6379:6379
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4

      - name: Setup Home
        if: ${{ inputs.runs-on != 'ubuntu-latest' }}
        run: echo "HOME=/home/ubuntu" >> ${GITHUB_ENV}

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install Protoc
        uses: arduino/setup-protoc@v3

      - name: Setup usage of private repo
        run: git config --global url."https://${{ secrets.CONCRETE_ACTIONS_TOKEN }}@github.com".insteadOf ssh://git@github.com

      - name: Formatting
        run: cargo fmt --all -- --check

      - name: Linting
        run: cargo clippy --all-targets --all-features -- -D warnings --no-deps

      - name: Run Tests
        run: cargo test ${{ inputs.args_build }} --features tfhe/x86_64 --release
      
      - name: Install wasm-pack
        run: wasm-pack --version > /dev/null 2>&1 || cargo install wasm-pack

      - name: Build wasm
        run: RUSTFLAGS="$RUSTFLAGS -A dead_code" wasm-pack build --target web . --no-default-features
