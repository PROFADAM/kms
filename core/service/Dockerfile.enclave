FROM rust:1.79-bookworm as builder

WORKDIR /usr/src/kms-server
COPY . .

# Add github.com to the list of known hosts. .ssh folder needs to be created first to avoid permission errors
RUN mkdir -p -m 0600 /root/.ssh
RUN ssh-keyscan -H github.com >> /root/.ssh/known_hosts

# install protoc
RUN --mount=target=/var/lib/apt/lists,type=cache,sharing=locked \
    --mount=target=/var/cache/apt,type=cache,sharing=locked \
    rm -f /etc/apt/apt.conf.d/docker-clean \
    && apt-get update \
    && DEBIAN_FRONTEND=noninteractive \
    apt-get install --no-install-recommends --assume-yes \
    protobuf-compiler

RUN cargo install vsock-proxy --root /usr/local

RUN --mount=type=ssh \
    cargo install --path . --bin kms-server

FROM debian:bookworm

RUN --mount=target=/var/lib/apt/lists,type=cache,sharing=locked \
    --mount=target=/var/cache/apt,type=cache,sharing=locked \
    rm -f /etc/apt/apt.conf.d/docker-clean \
    && apt-get update \
    && DEBIAN_FRONTEND=noninteractive \
    apt-get install --no-install-recommends --assume-yes \
    jq socat

RUN mkdir -p -m 0600 /etc/ssl/certs
RUN mkdir -p -m 0600 /app/parameters
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=builder /usr/src/kms-server/parameters /app/parameters

COPY --from=builder /usr/local/bin/vsock-proxy /usr/local/bin/vsock-proxy
COPY --from=builder /usr/src/kms-server/target/release/kms-server /usr/local/bin/kms-server
RUN <<EOF cat >> /app/run.sh
#!/bin/sh
socat -u vsock-listen:4000 CREATE:credentials.json
export AWS_ACCESS_KEY_ID=$(jq '.Credentials.AccessKeyId' credentials.json)
export AWS_SECRET_ACCESS_KEY=$(jq '.Credentials.SecretAccessKey' credentials.json)
export AWS_SESSION_TOKEN=$(jq '.Credentials.SessionToken credentials.json')

# gRPC
vsock-proxy 5000 127.0.0.1 50051 &
# AWS S3
socat tcp4-listen:6000,fork vsock-connect:2:6000 &
# AWS KMS
socat tcp4-listen:7000,fork vsock-connect:2:7000 &

kms-server enclave
EOF
RUN chmod +x /app/run.sh
WORKDIR /app

CMD ["/app/run.sh"]
