version: '3.8'

name: zama-chain

services:

  kms-core:
    image: ghcr.io/zama-ai/kms-dev:v0.3.2
    ports:
      - "50051:50051"

  fevm-full-node:
    image: ghcr.io/zama-ai/ethermint-dev-node:v0.2.4
    ports:
      - "26656:26656"
      - "26657:26657"
      - "8545:8545"
    volumes:
      - ./blockchain/scripts/run_developer_image.sh:/start.sh
      - ./blockchain/temp/:/config/res/keys/
    entrypoint: ["/bin/bash", "/start.sh"]
    healthcheck:
      test: "curl -f http://localhost:26657/status"
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 20s

  fevm-light-node:
    image: cometbft/cometbft:v0.38.6
    ports:
      - "8888:8888"
    entrypoint: "/bin/bash"
    command: >
      -c "sleep 20;
      curl -s http://fevm-full-node:26657/commit | jq -r '.result.signed_header.commit.block_id.hash';
      cometbft light ethermint_9000-1 -p http://fevm-full-node:26657 -w http://fevm-full-node:26657 --hash $(curl -s http://fevm-full-node:26657/commit | jq -r '.result.signed_header.commit.block_id.hash') --height $(curl -s http://fevm-full-node:26657/commit | jq -r '.result.signed_header.header.height') --laddr tcp://0.0.0.0:8888 --sequential";
    depends_on:
      - fevm-full-node

  kms-full-node:
    image: cosmwasm/wasmd:latest
    ports:
      - "36656:26656"
      - "36657:26657"
      - "1317:1317"
    volumes:
      - validator-data:/root/.wasmd
    entrypoint: "/bin/sh"
    command: >
      -c "/opt/setup_wasmd.sh cosmos1pkptre7fdkl6gfrzlesjjvhxhlc3r4gmmk8rs6;
      sed -i .back -re 's/^(enabled-unsafe-cors =.*)$.*/enabled-unsafe-cors = true/g' /root/.wasmd/config/app.toml;
      sed -i .back -re 's/^(cors_allowed_origins =.*)$.*/cors_allowed_origins = \[\"*\"\]/g' /root/.wasmd/config/config.toml;
      sed -i .back -re 's/^(timeout_commit =.*)$.*/timeout_commit = \"500ms\"/g' /root/.wasmd/config/config.toml;
      /opt/run_wasmd.sh"
    healthcheck:
      test: "wget -Sq --spider http://localhost:26657/status"
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 20s

  kms-smart-contract-deploy:
    build:
      context: blockchain
      dockerfile: smart-contracts/Dockerfile
    entrypoint: "/bin/sh"
    command: >
      -c "
      sleep 5;
      echo \"1234567890\" | wasmd tx wasm upload /app/counter_test.wasm --from validator --chain-id testing --node tcp://kms-full-node:26657 --gas-prices 0.25ucosm --gas auto --gas-adjustment 1.3 -y --output json;
      echo \"1234567890\" | wasmd tx wasm instantiate 1 '{\"count\":12}' --label \"counter_test_0\" --from validator --output json --chain-id testing --node tcp://kms-full-node:26657 -y --no-admin;
      echo \"1234567890\" | wasmd tx wasm upload /app/configuration.wasm --from validator --chain-id testing --node tcp://kms-full-node:26657 --gas-prices 0.25ucosm --gas auto --gas-adjustment 1.3 -y --output json;
      echo \"1234567890\" | wasmd tx wasm instantiate 2 '{\"key\":\"foo\", \"value\": \"bar\"}' --label \"configuration_0\" --from validator --output json --chain-id testing --node tcp://kms-full-node:26657 -y --no-admin;"
    depends_on:
      kms-full-node:
        condition: service_healthy
    volumes:
      - validator-data:/root/.wasmd

  smart-contract-explorer:
    build:
      context: blockchain/code-explorer
    ports:
      - "3000:3000"
    depends_on:
      - kms-full-node

volumes:
     validator-data:
