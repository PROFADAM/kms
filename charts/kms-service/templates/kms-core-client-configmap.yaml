{{- if .Values.kmsCoreClient.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: kms-core-client
  name: {{ include "kmsCoreClientName" . }}-config
data:
  load-core-client-config.sh: |
    #!/usr/bin/env sh
    set -e
    echo "loading configuration from env vars into the config.toml file"

    # Process the S3 endpoint if it contains a variable
    if echo "$S3_ENDPOINT" | grep -q '\$'; then
        S3_ENDPOINT=$(eval echo "$S3_ENDPOINT")
    fi

    cat <<EOF >>config.toml
    s3_endpoint="${CORE_CLIENT__S3_ENDPOINT:=S3_ENDPOINT}"
    object_folder=${OBJECT_FOLDER}
    core_addresses=${CORE_ADDRESSES}
    num_majority=${NUM_MAJORITY}
    num_reconstruct=${NUM_RECONSTRUCT}
    decryption_mode=${DECRYPTION_MODE}
    fhe_params=${FHE_PARAMETER:=Test}
    EOF

    # Keep the pod running
    tail -f /dev/null

  load-core-client-testing-config.sh: |
    #!/usr/bin/env sh
    set -e

    echo "loading configuration from env vars into the config.toml file"

    # Process the S3 endpoint if it contains a variable
    if echo "$S3_ENDPOINT" | grep -q '\$'; then
        S3_ENDPOINT=$(eval echo "$S3_ENDPOINT")
    fi

    cat <<EOF >>config.toml
    s3_endpoint="${CORE_CLIENT__S3_ENDPOINT:=S3_ENDPOINT}"
    object_folder=${OBJECT_FOLDER}
    core_addresses=${CORE_ADDRESSES}
    num_majority=${NUM_MAJORITY}
    num_reconstruct=${NUM_RECONSTRUCT}
    decryption_mode=${DECRYPTION_MODE}
    fhe_params=${FHE_PARAMETER:=Test}
    EOF

    echo "######################################################################"
    echo "Launching testing core-client"
    echo ""
    echo ""
    echo "######################################################################"
    echo ""
    echo "Launching insecure key generation"
    result_key_id=$(bin/kms-core-client -f config.toml insecure-key-gen)

    echo "######################################################################"
    echo "Launching insecure crs generation"
    result_crs_id=$(bin/kms-core-client -f config.toml insecure-crs-gen --max-num-bits 128)

    key_id=$(echo $result_key_id | grep request_id | cut -d'"' -f4)
    crs_id=$(echo $result_crs_id | grep request_id | cut -d'"' -f4)

    for i in 1 2 3 4 5; do
      echo "######################################################################"
      echo "Launching decrypt with euint8"
      bin/kms-core-client --logs -f config.toml decrypt -d euint8 -k $key_id -e ff
      echo "######################################################################"
      echo "Launching decrypt with euint32"
      bin/kms-core-client --logs -f config.toml decrypt -d euint32 -k $key_id -e ffffffff
      echo "######################################################################"
      echo "Launching decrypt with euint64"
      bin/kms-core-client --logs -f config.toml decrypt -d euint64 -k $key_id -e ffffffffffffffff
      echo "######################################################################"
      echo "Launching decrypt with euint128"
      bin/kms-core-client --logs -f config.toml decrypt -d euint128 -k $key_id -e ffffffffffffffffffffffffffffffff
      echo "######################################################################"
      echo "Launching re-encrypt with euint8"
      bin/kms-core-client --logs -f config.toml re-encrypt -d euint8 -k $key_id -e ff
      echo "######################################################################"
      echo "Launching re-encrypt with euint32"
      bin/kms-core-client --logs -f config.toml re-encrypt -d euint32 -k $key_id -e ffffffff
      echo "######################################################################"
      echo "Launching re-encrypt with euint64"
      bin/kms-core-client --logs -f config.toml re-encrypt -d euint64 -k $key_id -e ffffffffffffffff
      echo "######################################################################"
      echo "Launching re-encrypt with euint128"
      bin/kms-core-client --logs -f config.toml re-encrypt -d euint128 -k $key_id -e ffffffffffffffffffffffffffffffff
    done


    echo "######################################################################"
    echo "Launching insecure key generation"
    result_key_id=$(bin/kms-core-client -f config.toml insecure-key-gen)

    echo "######################################################################"
    echo "Launching insecure crs generation"
    result_crs_id=$(bin/kms-core-client -f config.toml insecure-crs-gen --max-num-bits 512)

    key_id=$(echo $result_key_id | grep request_id | cut -d'"' -f4)
    crs_id=$(echo $result_crs_id | grep request_id | cut -d'"' -f4)

    for i in 1 2 3 4 5; do
      echo "######################################################################"
      echo "Launching decrypt with euint8"
      bin/kms-core-client --logs -f config.toml decrypt -d euint8 -k $key_id -e ff
      echo "######################################################################"
      echo "Launching decrypt with euint32"
      bin/kms-core-client --logs -f config.toml decrypt -d euint32 -k $key_id -e ffffffff
      echo "######################################################################"
      echo "Launching decrypt with euint64"
      bin/kms-core-client --logs -f config.toml decrypt -d euint64 -k $key_id -e ffffffffffffffff
      echo "######################################################################"
      echo "Launching decrypt with euint128"
      bin/kms-core-client --logs -f config.toml decrypt -d euint128 -k $key_id -e ffffffffffffffffffffffffffffffff
      echo "######################################################################"
      echo "Launching re-encrypt with euint8"
      bin/kms-core-client --logs -f config.toml re-encrypt -d euint8 -k $key_id -e ff
      echo "######################################################################"
      echo "Launching re-encrypt with euint32"
      bin/kms-core-client --logs -f config.toml re-encrypt -d euint32 -k $key_id -e ffffffff
      echo "######################################################################"
      echo "Launching re-encrypt with euint64"
      bin/kms-core-client --logs -f config.toml re-encrypt -d euint64 -k $key_id -e ffffffffffffffff
      echo "######################################################################"
      echo "Launching re-encrypt with euint128"
      bin/kms-core-client --logs -f config.toml re-encrypt -d euint128 -k $key_id -e ffffffffffffffffffffffffffffffff
    done

{{- end -}}
